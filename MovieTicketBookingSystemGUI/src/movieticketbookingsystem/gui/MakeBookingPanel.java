/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movieticketbookingsystem.gui;

import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import movieticketbookingsystem.Booking;
import movieticketbookingsystem.Customer;
import movieticketbookingsystem.Film;
import movieticketbookingsystem.Seat;

public class MakeBookingPanel extends javax.swing.JFrame {

    // model of the films table
    private DefaultTableModel films_dtm;
    // film list
    private ArrayList<Film> filmList;

    // selected film by the customer
    private Film selectedFilm;

    private Seat selectedSeat;

    private static MakeBookingPanel instance = new MakeBookingPanel();

    /**
     * Creates new form MakeBookingPanel
     */
    public MakeBookingPanel() {
        initComponents();
        // get the model of the films jtable
        films_dtm = (DefaultTableModel) jtableFilms.getModel();
    }

    public static MakeBookingPanel getInstance() {
        return instance;
    }

    public void showInterface() {
        instance.setVisible(true);
    }

    public void showInterface(ArrayList<Film> films) {
        this.filmList = films;
        instance.setVisible(true);
        // remove all the current elements in the table 
        cleanTable();
        // clear the image panel
        clearImagePanel();
        // clear the labels and text fields
        clearTextLabels();

        jLabelTitle.setText("Selecte A Film");
        selectedFilm = null;
        selectedSeat = null;

        // refresh the data to the UI model
        addFilmsToTable();

        selectedFilm = null;

        instance.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                MainMenu.getInstance().showInterface();
                instance.dispose();
            }

        });
    }

    public void setSelectedSeat(Seat seat) {
        selectedSeat = seat;
        seatTxt.setText(seat.toString());
    }

    /**
     * This method cleans the item table (remove all the data in the jtable
     * model)
     */
    private void cleanTable() {
        films_dtm.getDataVector().removeAllElements();
        films_dtm.fireTableDataChanged();
    }

    /**
     * Refresh the table
     */
    private void addFilmsToTable() {

        for (Film f : filmList) {
            films_dtm.addRow(new Object[]{f.getId(), f.getTitle(), f.getRating(),
                f.getCinema().getDescription()});
        }
    }

    /**
     * This method set the given image to the image panel
     *
     * @param image The given image's path
     */
    private void setImageToPanel(String image) {

        clearImagePanel();

        ImageIcon pic = new ImageIcon("Resources/FilmCovers/" + image);
        Image imageRead = pic.getImage();
        Image scaledInstance = imageRead.getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH);
        imageLabel.setIcon(new ImageIcon(scaledInstance));
        imageLabel.repaint();
        imageLabel.revalidate();
    }

    /**
     * This method clear the image panel
     */
    private void clearImagePanel() {
        imageLabel.setIcon(null);
        imageLabel.repaint();
    }

    /**
     * This method clear the text labels
     */
    private void clearTextLabels() {
        txtCustomer.setText("");
        txtAge.setText("");
        seatTxt.setText("");
        isStudentOptions.setSelectedIndex(0);
    }

    /**
     * This method issue a ticket for the given customer and film
     *
     * @param customer the given customer
     * @param film the given film
     * @return the created ticket
     */
    public Booking issueTicket(Customer customer, Film film) {

        Booking ticket = new Booking(customer, film);

        // reserve a new seat for the ticket
        ticket.reserveSeat(selectedSeat);

        if (customer.getAge() < film.getRating().getMinAge()) {
            return null;
        }

        return ticket;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtableFilms = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCustomer = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        jButtonCreateBooking = new javax.swing.JButton();
        txtAge = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        isStudentOptions = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        chooseSeatBtn = new javax.swing.JButton();
        seatTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Movie Ticket Booking System");

        jButtonBack.setText("<< Back");
        jButtonBack.setFocusPainted(false);
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Make A New Booking");

        jtableFilms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Film Title", "Rating", "Cinema Hall"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableFilms.setFocusable(false);
        jtableFilms.setGridColor(new java.awt.Color(204, 204, 204));
        jtableFilms.setRowHeight(20);
        jtableFilms.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtableFilms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableFilmsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtableFilms);
        if (jtableFilms.getColumnModel().getColumnCount() > 0) {
            jtableFilms.getColumnModel().getColumn(0).setResizable(false);
            jtableFilms.getColumnModel().getColumn(0).setPreferredWidth(5);
            jtableFilms.getColumnModel().getColumn(1).setResizable(false);
            jtableFilms.getColumnModel().getColumn(1).setPreferredWidth(100);
            jtableFilms.getColumnModel().getColumn(2).setResizable(false);
            jtableFilms.getColumnModel().getColumn(3).setResizable(false);
            jtableFilms.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        jLabel2.setText("Available Films");

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("Select A Film");

        jLabel4.setText("Customer Name");

        jLabel5.setText("Customer Age");

        imageLabel.setBackground(new java.awt.Color(204, 204, 204));
        imageLabel.setOpaque(true);

        jButtonCreateBooking.setText("Create Booking");
        jButtonCreateBooking.setFocusPainted(false);
        jButtonCreateBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateBookingActionPerformed(evt);
            }
        });

        txtAge.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel6.setText("Student");

        isStudentOptions.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));

        jLabel7.setText("Seat");

        chooseSeatBtn.setText("Choose");
        chooseSeatBtn.setFocusPainted(false);
        chooseSeatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseSeatBtnActionPerformed(evt);
            }
        });

        seatTxt.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButtonBack)
                                        .addGap(212, 212, 212)
                                        .addComponent(jLabel1)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 22, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(97, 97, 97)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtCustomer)
                                                .addComponent(txtAge, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(seatTxt)
                                                    .addComponent(isStudentOptions, 0, 84, Short.MAX_VALUE))
                                                .addGap(10, 10, 10)
                                                .addComponent(chooseSeatBtn)))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonCreateBooking)
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBack)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelTitle)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(isStudentOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(chooseSeatBtn)
                                    .addComponent(seatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonCreateBooking)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtableFilmsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableFilmsMouseClicked

        int selectedRow = jtableFilms.getSelectedRow();
        String id = films_dtm.getValueAt(selectedRow, 0).toString();

        /* find the relevant film for the selecetd row */
        for (Film f : filmList) {
            if (f.getId().equals(id)) {
                selectedFilm = f;
            }
        }
        //--------------

        if (selectedFilm.getCinema().isFull()) {
            JOptionPane.showMessageDialog(this, "Selected film is full of customers.");
            selectedFilm = null;
            jLabelTitle.setText("Select A Film");
            return;
        }

        // view the details of the selected film
        setImageToPanel(selectedFilm.getCoverPhoto());
        jLabelTitle.setText(selectedFilm.getTitle());
    }//GEN-LAST:event_jtableFilmsMouseClicked

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        MainMenu.getInstance().showInterface();
        instance.dispose();
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void chooseSeatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseSeatBtnActionPerformed
        if (selectedFilm == null) {
            JOptionPane.showMessageDialog(this, "First select a film from the list");
            return;
        }
        SeatChooser.getInstance().showInterface(selectedFilm.getCinema(), selectedSeat);
    }//GEN-LAST:event_chooseSeatBtnActionPerformed

    private void jButtonCreateBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateBookingActionPerformed

        String name = txtCustomer.getText().trim();
        String age = txtAge.getText().trim();
        int ageInt = 0;

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter customer name");
        } else if (age.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter customer age");
        } else {
            ageInt = Integer.parseInt(age);
            if (ageInt < 0) {
                JOptionPane.showMessageDialog(this, "Enter valid customer age");
            } else if (selectedFilm == null) {
                JOptionPane.showMessageDialog(this, "Please select a film");
            } else if (selectedSeat == null) {
                JOptionPane.showMessageDialog(this, "Please reserve a seat");
            } else {
                // now okay all the data are validated
                boolean isStudent = false;
                if (isStudentOptions.getSelectedIndex() == 0) {
                    isStudent = true;
                }
                Customer customer = new Customer(name, ageInt, isStudent);

                // then issue the ticket
                Booking ticket = issueTicket(customer, selectedFilm);

                // if the ticket can not be issue for the customer
                if (ticket == null) {
                    JOptionPane.showMessageDialog(this, "Sorry, cannot issue ticket for age restricted film");
                } else {
                    MainMenu.getInstance().addCustomer(customer);
                    // set the booking for the customer
                    customer.setBooking(ticket);
                    String details = "";
                    details += "Your ticket is ready to be collected!\n";
                    details += "------------------------------------------------------------\n";
                    details += ticket.toString() + "\n";
                    details += "------------------------------------------------------------\n";
                    // print the ticket
                    ticket.printTicket();
                    details += "Your ticket was printed to " + customer.getCustomerId() + "_ticket.txt\n";
                    
                    // save the ticket into the database
                    MainMenu.getInstance().getDatabaseConnection().insertBooking(ticket);
                    
                    JOptionPane.showMessageDialog(this, details);
                    clearTextLabels();
                    selectedSeat = null;

                }

            }
        }


    }//GEN-LAST:event_jButtonCreateBookingActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseSeatBtn;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JComboBox isStudentOptions;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonCreateBooking;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtableFilms;
    private javax.swing.JTextField seatTxt;
    private javax.swing.JFormattedTextField txtAge;
    private javax.swing.JTextField txtCustomer;
    // End of variables declaration//GEN-END:variables
}
